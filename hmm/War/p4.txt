
package lp_prac4;


import java.util.*;

public class Lp_prac4 {
    
    public static void main(String[] args) {
        // TODO code application logic here
        abc ob = new abc();
        ob.validation();
    }

}
class abc
{
    static Hashtable<String,Integer> h=new Hashtable<>();
    List<String> list=new ArrayList<>();
    String table[][] = new String[12][8];
    abc()
    {
      
        list.add("S->AxB");
        list.add("S->Bc");
        list.add("A->yA");
        list.add("A->z");
        list.add("B->xB");
        list.add("B->q");
        
        h.put("c", 0);
        h.put("x", 1);
        h.put("y", 2);
        h.put("z", 3);
        h.put("$", 4);
        h.put("S", 5);
        h.put("A", 6);
        h.put("B", 7);
        
       
        table[0][h.get("c")]="R6";
        table[0][h.get("x")]="S6";
        table[0][h.get("y")]="S4";
        table[0][h.get("z")]="S5";
        table[0][h.get("$")]="R6";
        table[0][h.get("S")]="1";
        table[0][h.get("A")]="2";
        table[0][h.get("B")]="3";
        table[1][h.get("$")]="Accept";
        table[2][h.get("x")]="S7";
        table[3][h.get("c")]="S8";
        table[4][h.get("y")]="S4";
        table[4][h.get("z")]="S5";
        table[4][h.get("A")]="9";
        table[5][h.get("x")]="R4";
        table[6][h.get("c")]="R6";
        table[6][h.get("x")]="S6";
        table[6][h.get("$")]="R6";
        table[6][h.get("B")]="10";
        table[7][h.get("c")]="R6";
        table[7][h.get("x")]="S6";
        table[7][h.get("$")]="R6";
        table[7][h.get("B")]="11";
        table[8][h.get("$")]="R2";
        table[9][h.get("x")]="R3";
        table[10][h.get("c")]="R5";
        table[10][h.get("$")]="R5";
        table[11][h.get("$")]="R1";
        
        
//        System.out.println(c);
    }
    void validation(){
//        String check="Invalid String!";
        
        Stack<String> stack=new Stack<>();
        Stack<String> buffer=new Stack<>();
        
        stack.push("0");
        System.out.println("Stack contents: "+stack);
        
        buffer.push("$");
        buffer.push("x");
        buffer.push("x");
        buffer.push("z");
        buffer.push("y");
        System.out.println("Buffer contents: "+buffer);
        
        while(!table[Integer.parseInt(stack.peek())][h.get(buffer.peek())].equals("Accept")){
            String s=table[Integer.parseInt(stack.peek())][h.get(buffer.peek())];
            if(s.charAt(0)=='S'){
                String str=s.substring(1);
                stack.push(buffer.pop());
                stack.push(str);
            }
            else if(s.charAt(0)=='R'){
                String str=s.substring(1);
                String get=list.get(Integer.parseInt(str)-1);
                int length=get.substring(3).length();
                for(int i=0;i<(2*length);i++){
                    if(stack.isEmpty()){
                        break;
                    }
                    else
                        stack.pop();
                }
                stack.push(Character.toString(get.charAt(0)));
                if(stack.isEmpty()){
                    break;
                }
                String s1=stack.pop();
                if(stack.isEmpty()){
                    break;
                }
                String s2=stack.pop();
                String g=table[Integer.parseInt(s2)][h.get(s1)];
                stack.push(s2);
                stack.push(s1);
                stack.push(g);                
            }
            System.out.println("Stack contents: "+stack);
            System.out.println("Buffer contents: "+buffer);
//            if(!stack.isEmpty() && !buffer.isEmpty()){
        }
                if(table[Integer.parseInt(stack.peek())][h.get(buffer.peek())].equals("Accept")){
                    System.out.println("Valid String");
                }
                else
                    System.out.println("Invalid String");
    
   
}
}