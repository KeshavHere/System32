package javaapplication1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class Main {


    public static void main(String[] args) throws FileNotFoundException, IOException
    {
          File file = new File("C:\\Users\\rcoem\\Desktop\\code.txt");
 
          BufferedReader br = new BufferedReader(new FileReader(file));

          int count = 0;  String st; String[] code = new String[8];
          while ((st = br.readLine()) != null)
          {
              code[count++]=st;
          }
         
          int[] paths = new int[100]; int n_paths=0;
          //System.out.println(code.length);
          int[] path = new int[8];
          int[] con = new int[8];
          int[] leader = {0,0,0,0,0,0,0,0};
          count=0;
          for(int c=0; c<code.length; c++)
          {
              if(c==0)
              {
                  leader[c]=1;
              }
             
              if(code[c].contains("if"))
              {
                  leader[c+1] = 1;
                  con[c]=1;
              }
             
              if(code[c].contains("goto"))
              {
                  char a = code[c].charAt(code[c].indexOf('(') + 1);
                  int b = Character.getNumericValue(a);
                  //System.out.println("\nb="+b+"\n");
                  leader[b-1]=1;
                  path[c]=b-1;
              }
             
             
          }
          System.out.println("\n\nLeaders:");
          for(int c=0; c<leader.length; c++)
              System.out.print(leader[c]+"\t");
         
          int[] block = new int[leader.length]; int b_no=0;
          for(int c=0; c<block.length; c++)
          {
              if(leader[c]==1)
              {
                  b_no++;
                  block[c]= b_no;
              }
             
              else
                block[c]=b_no;
          }
          System.out.println("\n\nBlocks:");
          for(int c=0; c<leader.length; c++)
              System.out.print(block[c]+"\t");
         
//          System.out.println("\n");
//          for(int c=0; c<path.length; c++)
//              System.out.print(path[c]+"\t");
          count=0;    
          for(int c=0; c<path.length; c++)
          {
              if(c!=path.length-1)
              {
                  if(path[c]==0 && (block[c]-block[c+1])!=0 && c!=path.length-1)
              {

                      paths[count++]= block[c]*10+block[c+1];
                      n_paths++;                
                 
                 
              }
             
             
              if(path[c]!=0 && c!=path.length-1 )
              {
                  paths[count++]=block[c]*10+block[path[c]];
                  n_paths++;
                 
                  if(con[c]!=0)
                  {
                      paths[count++]= block[c]*10+block[c+1];
                      n_paths++;
                  }
              }
          }
      }
               
             
             
         
          System.out.println("\n\nPaths:");
          for(int c=0; c<n_paths; c++)
              System.out.print(paths[c]+"\t");
    }
   
   
       
   
       
